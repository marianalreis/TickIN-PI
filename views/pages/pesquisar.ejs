<!DOCTYPE html>
<html lang="pt-br">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Pesquisar Eventos - TickIN</title>
    <link rel="stylesheet" href="../css/events.css" />
  </head>
  <body>
    <!-- Include the header -->
    <div id="header-placeholder"></div>

    <div class="search-container">
      <div class="search-box">
        <input 
          type="text" 
          placeholder="Pesquisar eventos..." 
          class="search-input" 
          id="searchInput"
        >
        <button class="search-button" aria-label="Buscar">
          <img src="/assets/search.png" alt="Buscar">
        </button>
      </div>
    </div>

    <div class="events-grid" id="eventsContainer">
      <!-- Events will be dynamically inserted here -->
    </div>

    <script>
      // Carregar o header
      fetch('../partials/header.html')
        .then(response => response.text())
        .then(data => {
          document.getElementById('header-placeholder').innerHTML = data;
        });

      // Function to format date
      function formatDate(dateString) {
        const date = new Date(dateString);
        return date.toLocaleDateString('pt-BR', {
          day: '2-digit',
          month: 'long',
          year: 'numeric'
        });
      }

      // Function to create event card
      function createEventCard(event) {
        return `
          <div class="event-card">
            <img src="${event.image}" alt="${event.title}" class="event-image">
            <div class="event-content">
              <h3 class="event-title">${event.title}</h3>
              <p class="event-details">
                üóì Data: ${formatDate(event.date)}<br>
                üïñ Hor√°rio: ${event.time}<br>
                üìç Local: ${event.location}
              </p>
              <div class="event-price">R$ ${event.price.toFixed(2)}</div>
              <button class="event-button" onclick="window.location.href='/evento/${event.id}'">
                Inscrever-se
              </button>
              <div class="organizer">
                <img src="${event.organizer.image}" alt="${event.organizer.name}">
                <div class="organizer-info">
                  <div>Organizado por</div>
                  <div><strong>${event.organizer.name}</strong></div>
                </div>
              </div>
            </div>
          </div>
        `;
      }

      // Function to fetch and display events
      async function fetchEvents(searchTerm = '') {
        try {
          // Simula√ß√£o de dados de eventos
          const events = [
            {
              id: 1,
              title: 'Workshop de Programa√ß√£o',
              description: 'Aprenda a programar em JavaScript do zero.',
              date: '2023-12-15',
              time: '19:00',
              location: 'Online',
              price: 50.00,
              image: '/assets/event1.jpg',
              organizer: {
                name: 'Tech Academy',
                image: '/assets/organizer1.jpg'
              }
            },
            {
              id: 2,
              title: 'Confer√™ncia de Tecnologia',
              description: 'Descubra as √∫ltimas tend√™ncias em tecnologia.',
              date: '2024-01-20',
              time: '09:00',
              location: 'Centro de Conven√ß√µes',
              price: 100.00,
              image: '/assets/event2.jpg',
              organizer: {
                name: 'TechConf',
                image: '/assets/organizer2.jpg'
              }
            }
          ];
          
          // Filtrar eventos se houver termo de pesquisa
          const filteredEvents = searchTerm 
            ? events.filter(event => 
                event.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                event.description.toLowerCase().includes(searchTerm.toLowerCase()) ||
                event.location.toLowerCase().includes(searchTerm.toLowerCase())
              )
            : events;
          
          const eventsContainer = document.getElementById('eventsContainer');
          eventsContainer.innerHTML = filteredEvents.map(event => createEventCard(event)).join('');
        } catch (error) {
          console.error('Erro ao buscar eventos:', error);
        }
      }

      // Search functionality
      const searchInput = document.getElementById('searchInput');
      let searchTimeout;

      searchInput.addEventListener('input', (e) => {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
          fetchEvents(e.target.value);
        }, 300);
      });

      // Initial load
      fetchEvents();
    </script>
  </body>
</html>
